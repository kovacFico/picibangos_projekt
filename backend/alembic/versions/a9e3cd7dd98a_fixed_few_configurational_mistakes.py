"""fixed few configurational mistakes

Revision ID: a9e3cd7dd98a
Revises: 62723a46eafc
Create Date: 2024-01-05 15:01:28.885806

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a9e3cd7dd98a"
down_revision = "62723a46eafc"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_events_event_name", table_name="events")
    op.drop_table("events")
    op.drop_index("ix_users_user_name", table_name="users")
    op.drop_table("users")
    op.drop_index("ix_teams_team_name", table_name="teams")
    op.drop_table("teams")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events",
        sa.Column(
            "event_id",
            sa.INTEGER(),
            server_default=sa.text("nextval('events_event_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "starts_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "ends_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("duration", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("attendee_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("team_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["attendee_id"], ["users.user_id"], name="events_attendee_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["team_id"], ["teams.team_id"], name="events_team_id_fkey"
        ),
        sa.PrimaryKeyConstraint("event_id", name="events_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_events_event_name", "events", ["event_name"], unique=False)
    op.create_table(
        "teams",
        sa.Column(
            "team_id",
            sa.INTEGER(),
            server_default=sa.text("nextval('teams_team_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("team_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("member_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["member_id"], ["users.user_id"], name="teams_member_id_fkey"
        ),
        sa.PrimaryKeyConstraint("team_id", name="teams_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_teams_team_name", "teams", ["team_name"], unique=False)
    op.create_table(
        "users",
        sa.Column("user_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("friends", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("team_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.event_id"], name="users_event_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["team_id"], ["teams.team_id"], name="users_team_id_fkey"
        ),
        sa.PrimaryKeyConstraint("user_id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
    )
    op.create_index("ix_users_user_name", "users", ["user_name"], unique=False)
    # ### end Alembic commands ###
